INSTANCE_PREFIX: {{ .InstancePrefix }}
NODE_INSTANCE_PREFIX: {{ .NodeInstancePrefix }}
CLUSTER_IP_RANGE: {{ .ClusterIPRange }}

#{
#url, hash, err := k.ServerBinaryTar.Resolve(fi.HashAlgorithmSHA1)
#if err != nil {
#return nil, err
#}
#SERVER_BINARY_TAR_URL"] = url
#SERVER_BINARY_TAR_HASH"] = hash
#}

#{
#url, hash, err := k.SaltTar.Resolve(fi.HashAlgorithmSHA1)
#if err != nil {
#return nil, err
#}
#SALT_TAR_URL"] = url
#SALT_TAR_HASH"] = hash
#}

SERVICE_CLUSTER_IP_RANGE: {{ .ServiceClusterIPRange }}

KUBERNETES_MASTER_NAME: {{ .MasterName }}

ALLOCATE_NODE_CIDRS: {{ .AllocateNodeCIDRs }}

ENABLE_CLUSTER_MONITORING: {{ .EnableClusterMonitoring }}
ENABLE_L7_LOADBALANCING: {{ .EnableL7LoadBalancing }}
ENABLE_CLUSTER_LOGGING: {{ .EnableClusterLogging }}
ENABLE_CLUSTER_UI: {{ .EnableClusterUI }}
ENABLE_NODE_LOGGING: {{ .EnableNodeLogging }}
LOGGING_DESTINATION: {{ .LoggingDestination }}
ELASTICSEARCH_LOGGING_REPLICAS: {{ .ElasticsearchLoggingReplicas }}
ENABLE_CLUSTER_DNS: {{ .EnableClusterDNS }}
ENABLE_CLUSTER_REGISTRY: {{ .EnableClusterRegistry }}
CLUSTER_REGISTRY_DISK: {{ .ClusterRegistryDisk }}
CLUSTER_REGISTRY_DISK_SIZE: {{ .ClusterRegistryDiskSize }}
DNS_REPLICAS: {{.DNSReplicas }}
DNS_SERVER_IP: {{ .DNSServerIP }}
DNS_DOMAIN: {{ .DNSDomain }}

KUBELET_TOKEN: {{ .KubeletToken }}
KUBE_PROXY_TOKEN: {{ .KubeProxyToken }}
ADMISSION_CONTROL: {{ .AdmissionControl }}
MASTER_IP_RANGE: {{ .MasterIPRange }}
RUNTIME_CONFIG: {{ .RuntimeConfig }}

CA_CERT: {{ Base64Encode (CA.Cert "ca").AsString }}
KUBELET_CERT: {{ Base64Encode (CA.Cert "kubelet").AsString }}
KUBELET_KEY: {{ Base64Encode (CA.PrivateKey "kubelet").AsString }}

NETWORK_PROVIDER: {{ .NetworkProvider }}
HAIRPIN_MODE: {{ .HairpinMode }}
OPENCONTRAIL_TAG: {{ .OpencontrailTag }}
OPENCONTRAIL_KUBERNETES_TAG: {{ .OpencontrailKubernetesTag }}
OPENCONTRAIL_PUBLIC_SUBNET: {{ .OpencontrailPublicSubnet }}
E2E_STORAGE_TEST_ENVIRONMENT: {{ .E2EStorageTestEnvironment }}
KUBE_IMAGE_TAG: {{ .KubeImageTag }}
KUBE_DOCKER_REGISTRY: {{ .KubeDockerRegistry }}
KUBE_ADDON_REGISTRY: {{ .KubeAddonRegistry }}
MULTIZONE: {{ .Multizone }}
NON_MASQUERADE_CIDR: {{ .NonMasqueradeCidr }}

KUBELET_PORT: {{ .KubeletPort }}

KUBE_APISERVER_REQUEST_TIMEOUT: {{ .KubeApiserverRequestTimeout }}

TERMINATED_POD_GC_THRESHOLD: {{ .TerminatedPodGcThreshold }}

#if k.OsDistribution == "trusty" {
#KUBE_MANIFESTS_TAR_URL: .KubeManifestsTarURL }}
#KUBE_MANIFESTS_TAR_HASH: .KubeManifestsTarSha256 }}
#}

TEST_CLUSTER: {{ .TestCluster }}

KUBELET_TEST_ARGS: {{ .KubeletTestArgs }}

KUBELET_TEST_LOG_LEVEL: {{ .KubeletTestLogLevel }}

DOCKER_TEST_LOG_LEVEL: {{ .DockerTestLogLevel }}

ENABLE_CUSTOM_METRICS: {{ .EnableCustomMetrics }}

# if .Target.IsMaster

# If the user requested that the master be part of the cluster, set the
# environment variable to program the master kubelet to register itself.
{{ if .RegisterMasterKubelet }}
KUBELET_APISERVER: {{ .MasterName }}
{{ end }}

KUBERNETES_MASTER: true
KUBE_USER: {{ .KubeUser }}
KUBE_PASSWORD: {{ .KubePassword }}
KUBE_BEARER_TOKEN: {{ .BearerToken }}
MASTER_CERT: {{ Base64Encode (CA.Cert "master").AsString }}
MASTER_KEY: {{ Base64Encode (CA.PrivateKey "master").AsString }}
KUBECFG_CERT: {{ Base64Encode (CA.Cert "kubecfg").AsString }}
KUBECFG_KEY: {{ Base64Encode (CA.PrivateKey "kubecfg").AsString }}

ENABLE_MANIFEST_URL: {{ .EnableManifestURL }}
MANIFEST_URL: {{ .ManifestURL }}
MANIFEST_URL_HEADER: {{ .ManifestURLHeader }}
NUM_NODES: {{.NodeCount }}

APISERVER_TEST_ARGS: {{ .ApiserverTestArgs }}

APISERVER_TEST_LOG_LEVEL: {{ .ApiserverTestLogLevel }}

CONTROLLER_MANAGER_TEST_ARGS: {{ .ControllerManagerTestArgs }}

CONTROLLER_MANAGER_TEST_LOG_LEVEL: {{ .ControllerManagerTestLogLevel }}

SCHEDULER_TEST_ARGS: {{ .SchedulerTestArgs }}

SCHEDULER_TEST_LOG_LEVEL: {{ .SchedulerTestLogLevel }}

# else

# Node-only vars

KUBERNETES_MASTER: false
ZONE: {{ .Zone }}
EXTRA_DOCKER_OPTS: {{ .ExtraDockerOpts }}
MANIFEST_URL: {{ .ManifestURL }}

KUBEPROXY_TEST_ARGS: {{ .KubeProxyTestArgs }}

KUBEPROXY_TEST_LOG_LEVEL: {{ .KubeProxyTestLogLevel }}

# end

NODE_LABELS: {{ .NodeLabels }}

#if k.OsDistribution == "coreos" {
#// CoreOS-only env vars. TODO(yifan): Make them available on other distros.
#KUBE_MANIFESTS_TAR_URL:  .KubeManifestsTarURL }}
#KUBE_MANIFESTS_TAR_HASH:  .KubeManifestsTarSha256 }}
#KUBERNETES_CONTAINER_RUNTIME:  .ContainerRuntime }}
#RKT_VERSION: .RktVersion }}
#RKT_PATH:  .RktPath }}
#KUBERNETES_CONFIGURE_CBR0:  .KubernetesConfigureCbr0 }}
#}

# This next bit for changes vs kube-up:
# https://github.com/kubernetes/kubernetes/issues/23264
CA_KEY: {{ Base64Encode (CA.PrivateKey "ca").AsString }}
